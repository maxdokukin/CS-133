{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1-iR9aYe7vadtSyJfgZUrRRVHjOOEJJmN","timestamp":1715398413202}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["<img src=https://www.hstoday.us/wp-content/uploads/2018/11/earthquake-3167693_1920.jpg>\n","\n","<img src=\"https://cdn-images-1.medium.com/max/2000/1*MEcMeVoX9Mdqtk83oLBuEQ.png\" width=200>"],"metadata":{"id":"6jcylZAIi9M9"}},{"cell_type":"code","source":["# Run this cell to install vaex\n","!pip install vaex --quiet"],"metadata":{"id":"MjuGsAx8jE3d"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#**Q1**: Load a large CSV file into a pandas dataframe and a vaex dataframes (2 pts)\n","1. load the csv file into a pandas dataframe\n","2. convert it to hdf5 format\n","3. load the hdf5 file in a vaex dataframe\n","\n","The csv file is given to you in the code cell below. Check out this [Vaex page](https://vaex.readthedocs.io/en/latest/faq.html#I-have-a-massive-CSV-file-which-I-can-not-fit-all-into-memory-at-one-time.-How-do-I-convert-it-to-HDF5?) to see how you can convert a csv file to hdf5 format.\n","\n","The data are from Los Alamos National Laboratory for predicting earthquake. Here are the info of the data:\n","\n","* `acoustic_data` - the seismic signal\n","* `time_to_failure` - the time (in seconds) until the next laboratory earthquake\n","\n","\n"],"metadata":{"id":"6uEYTy6jfDTD"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"FXb90OIOfAJS"},"outputs":[],"source":["import vaex\n","import warnings; warnings.filterwarnings(\"ignore\")\n","\n","csvFile = 'http://furryhelpers.com/SJSU/CS133/train_50m.csv'\n","\n","# Your code here . . ."]},{"cell_type":"markdown","source":["#**Q2.** Compare the time performance between pandas and vaex. (2 pts)\n","The average `time_to_failure` is `4.513`. Calculate and store the remeaned values (`time_to_failure - 4.513`) in a new column, `remean_ttf`, in both the vaex dataframe and the pandas dataframe. Display the updated dataframes.\n","\n","Use the `%%time` to compare the time effiency of using the pandas dataframe vs. the vaex dataframe to do such operation.\n"],"metadata":{"id":"xddp3UbcAG5e"}},{"cell_type":"code","source":["## Q2 pandas dataframe\n","\n","## Your code here . . .\n"],"metadata":{"id":"wQmr4DD6_mQM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## Q2 vaex dataframe\n","\n","## Your code here . . .\n","\n"],"metadata":{"id":"7-Gwc-2c_x3c"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###**Q2.1** Which dataframe has better time performance?\n","\n","Your answer here . . .\n"],"metadata":{"id":"Vcs9yz6vbVnd"}},{"cell_type":"markdown","source":["#**Q3** Use the vaex data frame to calculate the average `time_to_failure` group by `acoustic_data`. (2 pts)\n","- Store the resulting dataframe in a variable of your choice.\n"],"metadata":{"id":"oZgxDhLq4xus"}},{"cell_type":"code","source":["## Q3\n","\n","## Your code here . . ."],"metadata":{"id":"dDFAxGtZDocb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#**Q4** Visualize the data with a line plot. (4 pts)\n","- Using the dataframe created in Q3, convert it back to a pandas dataframe\n","- Create a seaborn `lineplot` that shows the `acoustic_data` and the `time_to_failure_mean` data on two y-axises on the same plot. Add a legend to the plot.\n","- Add a meaningful title to the plot.\n","\n","Here is an example of the expected plot:\n","\n","<img src=\"https://drive.google.com/uc?export=view&id=1mqprsln4Lw7w5V2xiqizhDPMMZKSw2qF\" width=800px>\n","\n","Check out [this blog](https://towardsdatascience.com/adding-a-third-y-axis-to-python-combo-chart-39f60fb66708) to learn more on how to plot on both y-axises. Here is [a copy on Canvas](https://sjsu.instructure.com/courses/1487798/pages/adding-a-second-slash-third-y-axis-to-python-combo-chart) if you don't have access to the blog."],"metadata":{"id":"fQ7IK8AWDv9t"}},{"cell_type":"code","source":["## Q4\n","\n","## Your code here . . ."],"metadata":{"id":"JO5_54_ebGP8"},"execution_count":null,"outputs":[]}]}